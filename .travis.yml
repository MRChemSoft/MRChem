language: cpp
dist: trusty
sudo: false

notifications:
  slack:
    secure: PSksBCDscyT65LOQbb5rk/ArV+QD5RJ0WANZYX2j3ONwcbNWv5LfbosnpORcXeD/OSQQi62jk2geOtGI+FGZbSy80nEwl3xk4JB7y0y+wLzYz4453l+OGWxndGpMUea2HNJu6DJsUVimin1y+4KHRakL3gvWkrbnwWFiWE+awnQw5I4zlxCC+IZ/7xhmA74tLIFq+PbqjvscrPv8hUwcpU6j3Cu0jvs4mpIi4/fgUCoMBJ0Cu+5ZZeraYHCjcB25zGpJlcZPUJP3qMQxCclXPIBTNEMNuYYU2Q6C5I8PiU/w+3Jwi7MDYTWlQ9UIdKz7xUzBQV6PDPm5Z46YNJKO2TJuVWOOdZ7BRivfnfX2gFA+oKCJ/ViBNK0WyK9guzcW6k7b0AHu/8Mgu7+QqRdap85XT4hNBYNlMJwx8lKMoMXIy7WL1ijCI9q0SvL7bb1jrEGPeFlSBYW3cVlhvPQc1duy6XqlzxHl55ZRbC7vKbPbfOTFG5uKg7u7YdCxxaKJ050EK4p94Vvocg0wO5aeMZOmH3cioK3yJZOKlGAJoGsAHWlU3aHzhH6NSO+2+T7ro+pXrZy7ZQ3SILGIXzPsTMsi1lR78Be4x2F7qjl0CWMeilfornGbI5VC/7iKYOKZ2JyP7fhjeX+BQb8DuDXzyW9wb3/w4zwb0BDfxQJMmYw=

env:
  - OMP_NUM_THREADS=2

matrix:
  include:
    - os: linux
      addons: &1
        apt:
          packages:
            - cmake3
            - cmake3-data
            - g++-4.8
            - libboost-all-dev
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++-4.8'
        - PYTHON_VER='2.7'
        - EIGEN_VER='3.3.4'
    - os: linux
      addons: *1
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++-4.8'
        - OPENMP='--omp'
        - PYTHON_VER='2.7'
        - EIGEN_VER='3.3.4'
    - os: linux
      addons: *1
        apt:
          packages:
            - lcov
      env:
        - BUILD_TYPE='debug'
        - CXX_COMPILER='g++-4.8'
        - COVERAGE='--coverage'
        - PYTHON_VER='2.7'
        - EIGEN_VER='3.3.4'


before_script:
  - |
    if [[ ! -d "$HOME/Deps/eigen" ]]; then
      mkdir -p $HOME/Downloads/eigen
      cd $HOME/Downloads
      curl -Ls http://bitbucket.org/eigen/eigen/get/${EIGEN_VER}.tar.gz | tar -xz -C eigen --strip-components=1
      cd eigen
      cmake -H. -Bbuild_eigen -DCMAKE_INSTALL_PREFIX=$HOME/Deps/eigen &> /dev/null
      cmake --build build_eigen -- install &> /dev/null
      cd ${TRAVIS_BUILD_DIR}
      rm -rf $HOME/Downloads/eigen
    fi
  - python --version
  - cmake --version
  - ${CXX_COMPILER} --version

script:
  # FIXME --enable-tests currently (and TEMPORARILY!!!) removed
  - ./setup --enable-unit-tests --type=${BUILD_TYPE} --cxx=${CXX_COMPILER} ${COVERAGE} ${OPENMP} --cmake-options="-DEigen3_DIR=${HOME}/Deps/eigen/share/eigen3/cmake"
  - cmake --build build --target install -- VERBOSE=1 #-j2
  # Unit tests currently run _within_ superbuild
  #- cd build
  #- ctest --output-on-failure --verbose

after_success:
  - |
    if [[ "${COVERAGE}" = "--coverage" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'tests/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi

