language: cpp
sudo: false
dist: trusty

notifications:
  slack:
    secure: PSksBCDscyT65LOQbb5rk/ArV+QD5RJ0WANZYX2j3ONwcbNWv5LfbosnpORcXeD/OSQQi62jk2geOtGI+FGZbSy80nEwl3xk4JB7y0y+wLzYz4453l+OGWxndGpMUea2HNJu6DJsUVimin1y+4KHRakL3gvWkrbnwWFiWE+awnQw5I4zlxCC+IZ/7xhmA74tLIFq+PbqjvscrPv8hUwcpU6j3Cu0jvs4mpIi4/fgUCoMBJ0Cu+5ZZeraYHCjcB25zGpJlcZPUJP3qMQxCclXPIBTNEMNuYYU2Q6C5I8PiU/w+3Jwi7MDYTWlQ9UIdKz7xUzBQV6PDPm5Z46YNJKO2TJuVWOOdZ7BRivfnfX2gFA+oKCJ/ViBNK0WyK9guzcW6k7b0AHu/8Mgu7+QqRdap85XT4hNBYNlMJwx8lKMoMXIy7WL1ijCI9q0SvL7bb1jrEGPeFlSBYW3cVlhvPQc1duy6XqlzxHl55ZRbC7vKbPbfOTFG5uKg7u7YdCxxaKJ050EK4p94Vvocg0wO5aeMZOmH3cioK3yJZOKlGAJoGsAHWlU3aHzhH6NSO+2+T7ro+pXrZy7ZQ3SILGIXzPsTMsi1lR78Be4x2F7qjl0CWMeilfornGbI5VC/7iKYOKZ2JyP7fhjeX+BQb8DuDXzyW9wb3/w4zwb0BDfxQJMmYw=

matrix:
  include:
    - os: linux
      addons: &1
        apt:
          packages:
            - g++
            - gcc
            - lcov
            - libboost-all-dev
            - python-pyparsing
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - PYTHON_VER='2.7'
    - os: linux
      addons: *1
      env:
        - BUILD_TYPE='release'
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - OPENMP='--omp'
        - PYTHON_VER='2.7'
    - os: linux
      addons: *1
      env:
        - BUILD_TYPE='debug'
        - CXX_COMPILER='g++'
        - C_COMPILER='gcc'
        - COVERAGE='--coverage'
        - PYTHON_VER='2.7'

env:
  global:
    - LC_ALL="en_US.UTF-8"
    - LANG="en_US.UTF-8"
    - LANGUAGE="en_US.UTF-8"
    - PYTHONIOENCODING=UTF-8
    - OMP_NUM_THREADS=2
    - CMAKE_VERSION="3.6.3"

cache:
  timeout: 1000
  pip: true
  directories:
    - $HOME/Deps/cmake/$CMAKE_VERSION
    - $HOME/Deps/eigen

before_install:
  # Dependencies are downloaded in $HOME/Downloads and installed in $HOME/Deps
  - mkdir -p $HOME/Downloads $HOME/Deps

install:
  - ./.ci/cmake.sh
  - export PATH=$HOME/Deps/cmake/$CMAKE_VERSION/bin${PATH:+:$PATH}
  - ./.ci/eigen.sh

before_script:
  - test -n $CC && unset CC
  - test -n $CXX && unset CXX
  - test -n $FC && unset FC

script:
  - ./.ci/report_versions.sh
  - |
    python ./setup \
           --enable-tests \
           --enable-unit-tests \
           --type=${BUILD_TYPE} \
           --prefix=$HOME/Software/MRChem \
           --cxx=${CXX_COMPILER} \
           ${COVERAGE} \
           ${OPENMP} \
           --cmake-options="-DEigen3_DIR=${HOME}/Deps/eigen/share/eigen3/cmake -DCMAKE_C_COMPILER=${C_COMPILER}"
  - cmake --build build --target install -- VERBOSE=1
  - cd build
  - |
    if [[ "${COVERAGE}" = "--coverage" ]]; then
      ctest --output-on-failure --verbose -LE "integration"
    else
      ctest --output-on-failure --verbose
    fi

after_success:
  - |
    if [[ "${COVERAGE}" = "--coverage" ]]; then
      cd ${TRAVIS_BUILD_DIR}
      lcov --version
      lcov --directory . --capture --output-file coverage.info
      lcov --remove coverage.info '/usr/*' --output-file coverage.info
      lcov --remove coverage.info 'external/*' --output-file coverage.info
      lcov --remove coverage.info 'tests/*' --output-file coverage.info
      lcov --list coverage.info
      bash <(curl -s https://codecov.io/bash) -X gcov || echo "Codecov did not collect coverage reports"
    fi
