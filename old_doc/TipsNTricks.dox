/** \page TipsNTricks Tips and tricks for developers

Faster compilation
Compiling the whole mrchem source tree, including all tests, takes a long time.
There is not much one can do about that. A few tricks are however useful:

    Building the code in parallel using make -j N (e.g with N=8 on stallo).
Doing this will most likely fail since we generate some file on the fly, but a
simple serial make at the end fixes that. Alternatively you can build the
external projects fist (preferred), and then the rest of mrchem in parallel:
        make -j 4 libgetk
        make -j 4 xcfun
        make -j 4 mrchem
    Instead of building all targets (the default), explicitly specify the
binary you want to build: E.g. make -j 2 sanbbox.

The "sandbox"

The sandbox is a playground for developers. Here you can put your own, private
testing code, and have it automagically compiled. To use the sandbox do the
following:

    Create a file called sandbox.cpp in the sandbox directory (just copy
src/mrchem/mrcpp.cpp for a good starting point)
    Copy your own inputs into the sandbox and make sure they are named:
        mrchem.inp
        test.bas
        test.dens
    Never, ever commit any of the files in the sandbox! It's your playground,
not mine!


*/
